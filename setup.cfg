[metadata]
name = sherpa
author = Smithsonian Astrophysical Observatory / Chandra X-Ray Center
author_email = cxchelp@head.cfa.harvard.edu
license = GNU GPL v3
license_file = COPYRIGHT
url = http://cxc.harvard.edu/sherpa/
description = Modeling and fitting package for scientific data analysis
long_description = file: README.md
keywords = astronomy, astrophysics, modeling, models, fitting, X-ray, data analysis
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
# We set packages to find: to automatically find all sub-packages
packages = find:
requires = numpy
zip_safe = False
tests_require =
    pytest>=3.3
    pytest-xvfb
setup_requires = setuptools_scm
install_requires = numpy>=1.10
python_requires = >=3.5

[options.entry_points]
console_scripts =
    sherpa_test = sherpa:clitest
    sherpa_smoke = sherpa:_smoke_cli

[options.extras_require]
test =
    coverage
docs =
    sphinx-astropy
    pytest

[options.data_files]
sherpa = sherpa/sherpa.rc, sherpa/sherpa-standalone.rc


[options.package_data]
* = data/*, data/*/*, data/*/*/*, data/*/*/*/*, data/*/*/*/*/*, data/*/*/*/*/*/*
astropy = s
astropy.utils.tests = data/.hidden_file.txt
astropy.wcs = include/*/*.h
astropy.wcs.tests = extension/*.c
sherpa = include/sherpa/*.hh, include/sherpa/astro/*.hh, tests/*
sherpa.astro.ui = tests/data/*

[tool:pytest]
minversion = 3.1
testpaths = "sherpa" "docs"
norecursedirs = "docs[\/]_build" "docs[\/]generated" "astropy[\/]extern"
doctest_plus = enabled
text_file_format = rst



[sherpa_config]

# Directory where the external dependencies must be installed.
#install_dir=build

# Additional configure flags for building extern dependencies
# Set to 'None' (without quotes) to just override the default flags
#configure=None

# GROUP Python module
#disable-group=True
#group-location=build/lib/python2.7/site-packages/group.so

# Additional flags to be passed to libgrp build
#group-cflags=

# File Stack Python module
#disable-stk=True
#stk-location=build/lib/python2.7/site-packages/stk.so

# FFTW Library
# Uncomment to use a local installation
#fftw=local

# If fftw=local uncomment the following lines and
# change the default location of libraries and the name
# of the library to be linked (usually fftw3)
# (include multiple values by separating them with spaces)
#fftw-include_dirs=build/include
#fftw-lib-dirs=build/lib
#fftw-libraries=fftw3

# Region Library
# Uncomment to use a local installation
#region=local

# If region=local uncomment the following lines and
# change the default location of libraries and headers and the name
# of the library to be linked (usually region)
# (include multiple values by separating them with spaces)
#region-include_dirs=build/include
#region-lib-dirs=build/lib
#region-libraries=region

# WCS Subroutines
# Uncomment to use a local installation
#wcs=local

# Uncomment and change default location if needed
#wcs-include-dirs=build/include
#wcs-lib-dirs=build/lib
#wcs-libraries=wcs


[build_sphinx]
source-dir = docs


# XSPEC Models
[xspec_config]
# Uncomment (set to True) to build XSPEC extension
#with-xspec=True

# If with-xspec is True, make sure to point Sherpa to right
# XSPEC-related libraries and to indicate the XSPEC version.
# As of XSPEC 12.10.0, determining the version os XSPEC at build
# time is too complex and unreliable. If you have XSPEC 12.9.0
# you can leave the version option commented out.
#
# The xspec_include_dirs and xspec_lib_dirs items should be set
# to $HEADAS/include and $HEADAS/lib respectively (expand out the
# environment variable).
#
# If you are using a full XSPEC build, then add the correct version
# numbers to the cfitsio, CCfits, and wcs libraries used in the build,
# if necessary. For XSPEC 12.9.1 this means using CCfits_2.5 and
# wcs-5.16.
#
# If you are using the models-only XSPEC build, then the cfitsio_lib_dirs,
# ccfits_lib_dirs, and wcslib_lib_dirs will need to be set if
# these libraries are installed in a different location to the XSPEC
# libraries.
#
# The gfortran_lib_dirs should be set if needed.
#
#xspec_version = 12.9.0
#xspec_lib_dirs = None
#xspec_include_dirs = None
#xspec_libraries = XSFunctions XSModel XSUtil XS
#cfitsio_lib_dirs = None
#cfitsio_libraries = cfitsio
#ccfits_lib_dirs = None
#ccfits_libraries = CCfits
#wcslib_lib_dirs = None
#wcslib_libraries = wcs
#gfortran_lib_dirs = None
#gfortran_libraries = gfortran


[coverage:run]
omit =
  astropy/__init__*
  astropy/conftest.py
  astropy/*setup*
  astropy/*/tests/*
  astropy/tests/test_*
  astropy/extern/*
  astropy/utils/compat/*
  astropy/version*
  astropy/wcs/docstrings*
  astropy/_erfa/*
  */astropy/__init__*
  */astropy/conftest.py
  */astropy/*setup*
  */astropy/*/tests/*
  */astropy/tests/test_*
  */astropy/extern/*
  */astropy/utils/compat/*
  */astropy/version*
  */astropy/wcs/docstrings*
  */astropy/_erfa/*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}

