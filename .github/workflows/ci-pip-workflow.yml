name: Pip CI

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:

#Reduces GH Action duplication:
# Cancels the previous pipeline for this ref it is still running
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    defaults:
      run:
        shell: bash

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Linux Minimum Setup
            os: ubuntu-latest
            python-version: "3.10"
            numpy-pkg: 'numpy>=1.24,<1.25'
            install-type: develop
            test-data: none

          - name: Linux Build (w/o Xspec; Python 3.11)
            os: ubuntu-latest
            python-version: "3.11"
            numpy-pkg: 'numpy'
            install-type: install
            test-data: package
            fits-pkg: 'astropy'
            matplotlib-pkg: 'matplotlib>=3,<4'
            bokeh-pkg: 'bokeh>=3,<4'

          - name: Linux Build (w/o Astropy or Xspec)
            os: ubuntu-latest
            python-version: "3.11"
            numpy-pkg: 'numpy'
            install-type: install
            test-data: package
            matplotlib-pkg: 'matplotlib>=3,<4'
            bokeh-pkg: 'bokeh>=3,<4'
            arviz-pkg: 'arviz'

          - name: Linux Build (w/o Matplotlib, Xspec, or test data)
            os: ubuntu-latest
            python-version: "3.10"
            numpy-pkg: 'numpy'
            install-type: develop
            fits-pkg: 'astropy'
            test-data: none

          - name: Linux Build (submodule data w/o Matplotlib or Xspec)
            os: ubuntu-latest
            python-version: "3.12"
            numpy-pkg: 'numpy'
            install-type: develop
            fits-pkg: 'astropy'
            test-data: submodule

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4.1.1
      with:
        submodules: 'True'

    - name: Pip Testing Setup - Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pip Testing Setup - Dependencies
      env:
        NUMPYVER: ${{ matrix.numpy-pkg }}
        FITSBUILD: ${{ matrix.fits-pkg }}
        MATPLOTLIBVER: ${{ matrix.matplotlib-pkg }}
        BOKEHVER: ${{ matrix.BOKEH-pkg }}
        ARVIZVER: ${{ matrix.arviz-pkg }}
      run: |
        # Install FFTW rather than use the version bundled with
        # Sherpa, and ensure we have pkg-config set up.
        #
        sudo apt-get install -q -y libfftw3-double3 libfftw3-dev pkg-config
        echo "** fftw3"
        pkg-config fftw3 --cflags --libs
        # In case we forget to set matrix.numpy-pkg
        if [ ! -n "${NUMPYVER}" ] ; then
          NUMPYVER='numpy'
        fi
        pip install ${NUMPYVER} ${FITSBUILD} ${MATPLOTLIBVER} ${BOKEHVER} ${ARVIZVER}

    - name: Build Sherpa (install)
      if: matrix.install-type == 'install'
      run: |
        pip install . --verbose

    - name: Build Sherpa (develop)
      if: matrix.install-type == 'develop'
      run: |
        pip install ninja meson meson-python numpy
        pip install -e . --verbose --no-build-isolation

    - name: install pytest-xvfb
      if: matrix.test-data == 'package'
      run: |
        pip install pytest-xvfb

    - name: sherpa_test with test-data=${{ matrix.test-data }}
      if: matrix.test-data == 'package' || matrix.test-data == 'none'
      env:
        TEST: ${{ matrix.test-data }}
      run: |
        git submodule deinit -f .
        pip install pytest-cov
        cd $HOME
        sherpa_test --cov=sherpa --cov-report=xml:${{ github.workspace }}/coverage.xml

    - name: Submodule test with pytest
      if: matrix.test-data == 'submodule'
      run: |
        pip install -r test_requirements.txt
        pip install pytest-cov
        cd $HOME
        pytest --cov=sherpa --cov-report=xml:${{ github.workspace }}/coverage.xml

    - name: upload coverage
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ${{ github.workspace }}/coverage.xml
        verbose: true

    - name: Smoke Test
      env:
        FITS: ${{ matrix.fits-pkg }}
      run: |
        smokevars="-v 3"
        if [ ${FITS} != '' ] ; then
            smokevars="-f ${FITS} ${smokevars}"
        fi
        echo "** smoke test: ${smokevars}"
        cd ${HOME}
        sherpa_smoke ${smokevars}

  wsltests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: WSL Minimum Setup
            os: windows-latest

    steps:
    # See
    # https://github.com/actions/checkout/issues/226#issuecomment-854736025
    - name: Prepare git
      run: |-
        git config --global core.autocrlf false
        git config --global core.eol lf

    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: 'True'

    - name: Setup WSL
      uses: vedantmgoyal9/setup-wsl2@main

    - name: Setup apt
      shell: wsl-run {0}
      run: |
        apt update
        apt upgrade -y
        apt-get install -q -q git \
                              g++ \
                              gfortran \
                              flex \
                              bison \
                              make \
                              pkg-config \
                              libfftw3-double3 libfftw3-dev \
                              python3 \
                              python3-dev \
                              python3-configobj \
                              python3-venv

    - name: Setup python
      shell: wsl-run {0}
      run: |
        cd $HOME
        python3 -m venv --system-site-packages --upgrade-deps tests
        source tests/bin/activate

    - name: Setup environment
      shell: wsl-run {0}
      run: |
        source $HOME/tests/bin/activate
        pip3 install astropy matplotlib bokeh

    - name: Build and Install
      shell: wsl-run {0}
      run: |
        source $HOME/tests/bin/activate
        pip3 install .[test] --verbose

    - name: Test
      shell: wsl-run {0}
      run: |
        cd $HOME
        source tests/bin/activate
        sherpa_test
