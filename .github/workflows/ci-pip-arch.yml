name: Weekly cron (arch)

on:
  schedule:
    # when is a good time?
    - cron: '0 23 * * SUN'
  pull_request:
    # We also want this workflow triggered if the 'CI arch' label is added
    # or present when PR is updated
    types: [synchronize, labeled]

#Reduces GH Action duplication:
# Cancels the previous pipeline for this ref it is still running
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    if: (github.repository == 'sherpa/sherpa' && (github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'CI arch')))

    defaults:
      run:
        shell: bash

    name: ${{ matrix.name }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Python 3.13
            arch: ubuntu-24.04-arm
            python-version: "3.13"
            numpy-pkg: 'numpy'
            fits-pkg: 'astropy'
            matplotlib-pkg: 'matplotlib>=3,<4'
            bokeh-pkg: 'bokeh>=3,<4'
            arviz-pkg: 'arviz'

    steps:
    - name: "Checkout Code"
      uses: actions/checkout@v4
      with:
        submodules: 'True'

    - name: "Setup: Python"
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: "Setup: Dependencies"
      env:
        NUMPYVER: ${{ matrix.numpy-pkg }}
        FITSBUILD: ${{ matrix.fits-pkg }}
        MATPLOTLIBVER: ${{ matrix.matplotlib-pkg }}
        BOKEHVER: ${{ matrix.bokeh-pkg }}
        ARVIZVER: ${{ matrix.arviz-pkg }}
      run: |
        pip install ${NUMPYVER} ${FITSBUILD} ${MATPLOTLIBVER} ${BOKEHVER} ${ARVIZVER} pytest-xvfb

    - name: "Setup: DS9"
      run: |
        # Setup CONDA_PREFIX so that it maps to a location which
        # contains a bin directory which is in the PATH (or will be).
        #
        mkdir $HOME/bin
        CONDA_PREFIX=$HOME source .github/scripts/setup_ds9.sh

    - name: "Install Sherpa"
      run: |
        pip install . --verbose

    - name: "sherpa_test"
      run: |
        data_dir=`pwd`
        cd $HOME
        PATH=$HOME/bin:$PATH
        sherpa_test -D ${data_dir}/sherpa-test-data/sherpatest

    - name: "Smoke Test"
      env:
        FITS: ${{ matrix.fits-pkg }}
      run: |
        smokevars="-d -v 3"
        if [ ${FITS} != '' ] ; then
            smokevars="-f ${FITS} ${smokevars}"
        fi
        echo "** smoke test: ${smokevars}"
        cd ${HOME}
        PATH=$HOME/bin:$PATH
        sherpa_smoke ${smokevars}
