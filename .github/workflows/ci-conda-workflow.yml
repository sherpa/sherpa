name: Conda CI

on: [push, pull_request]

env:
  sherpa_channel: sherpa
  xspec_channel: "xspec/label/test"
  miniconda_loc: ${{ github.workspace }}/miniconda
  CONDA_BUILD_SYSROOT: ${{ github.workspace }}/10.9SDK/MacOSX10.9.sdk

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: MacOS Full Build
            os: macos-latest
            python-version: 3.8
            install-type: develop
            fits: astropy
            test-data: submodule
            matplotlib-version: 3
            xspec-version: 12.10.1s

          - name: Linux Minimum Setup 
            os: ubuntu-latest
            python-version: 3.8
            numpy-version: 1.18
            install-type: develop 
            test-data: none

          - name: Linux Full Build (Python 3.9)
            os: ubuntu-latest
            python-version: 3.9
            install-type: develop
            fits: astropy
            test-data: submodule
            matplotlib-version: 3
            xspec-version: 12.11.1

          - name: Linux Full Build (Python 3.8)
            os: ubuntu-latest 
            python-version: 3.8
            install-type: develop
            fits: astropy
            test-data: submodule
            matplotlib-version: 3
            xspec-version: 12.11.1

          - name: Linux Full Build (Python 3.7)
            os: ubuntu-latest
            python-version: 3.7
            numpy-version: 1.19
            install-type: install
            fits: astropy
            test-data: submodule 
            matplotlib-version: 3
            xspec-version: 12.10.1s

          - name: Linux Build (w/o Astropy or Xspec)
            os: ubuntu-latest
            python-version: 3.9 
            install-type: install
            test-data: package
            matplotlib-version: 3

          - name: Linux Build (w/o Matplotlib, Xspec, or test data)
            os: ubuntu-latest
            python-version: 3.7
            numpy-version: 1.18
            install-type: develop 
            fits: astropy
            test-data: none

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: 'True'

    - name: Install XQuartz on macOS
      if: runner.os == 'macOS'
      run: |
        curl -LO https://github.com/XQuartz/XQuartz/releases/download/XQuartz-2.8.1/XQuartz-2.8.1.dmg
        hdiutil attach XQuartz-2.8.1.dmg
        cd /Volumes/XQuartz-2.8.1
        sudo installer -pkg /Volumes/XQuartz-2.8.1/XQuartz.pkg -target /
        if [ $? != 0 ] ; then
            exit 1
        fi
        cd -
        hdiutil detach /Volumes/XQuartz-2.8.1
        rm XQuartz-2.8.1.dmg

    - name: Conda Testing Setup (Xspec and DS9)
      shell: bash
      env:
        PYTHONVER: ${{ matrix.python-version }}
        NUMPYVER: ${{ matrix.numpy-version }}
        FITSBUILD: ${{ matrix.fits }}
        MATPLOTLIBVER: ${{ matrix.matplotlib-version }}
        XSPECVER: ${{ matrix.xspec-version }}
      run: |
        source .github/scripts/setup_conda.sh
        if [ -n "${XSPECVER}" ] ; then
            source .github/scripts/setup_xspec_ds9.sh
        fi

    - name: Build Sherpa
      env:
        PYTHON_LDFLAGS: " "
      run: |
        source ${miniconda_loc}/etc/profile.d/conda.sh
        conda activate build
        python setup.py ${{ matrix.install-type }}

    - name: Tests
      env:
        TEST: ${{ matrix.test-data }}
        XSPECVER: ${{ matrix.xspec-version }}
        FITS: ${{ matrix.fits }}
      run: |
        source ${miniconda_loc}/etc/profile.d/conda.sh
        conda activate build
        source .github/scripts/test.sh

    - name: upload coverage
      uses: codecov/codecov-action@v2
      with:
        # only select the reports that we know are coverage reports, from linux conda, mac conda, and pip
        files: /home/runner/work/sherpa/sherpa/coverage.xml,/Users/runner/work/sherpa/sherpa/coverage.xml,/home/runner/coverage.xml
        verbose: true
