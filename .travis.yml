language: python

python:
  - "2.7"

sudo: false

cache:
  directories:
    - $HOME/xspec

addons:
  apt:
    packages: &default_apt
      - build-essential
      - gfortran
      - flex
      - bison

# We use matrix include so that xspec builds (which are more complicated and long) are started first
matrix:
  fast_finish: true
  include:
    - env: XSPECVER="12.8.2q" FITS="astropy" INSTALL_TYPE=develop TEST=submodule MATPLOTLIBVER=1.5
      python: "2.7"
      sudo: required
      dist: trusty
    - env: XSPECVER="12.9.0i" FITS="astropy" INSTALL_TYPE=develop TEST=submodule MATPLOTLIBVER=1.5
      python: "2.7"
      sudo: required
      dist: trusty
    - env: FITS="pyfits" INSTALL_TYPE=develop TEST=submodule MATPLOTLIBVER=1.5
      python: "2.7"
    - env: INSTALL_TYPE=install TEST=package MATPLOTLIBVER=1.5
      python: "2.7"
    - env: INSTALL_TYPE=install TEST=smoke NOSETUPTOOLS="true" MATPLOTLIBVER=1.5
      python: "2.7"
    - env: FITS="astropy" INSTALL_TYPE=develop TEST=submodule MATPLOTLIBVER=1.5
      python: "2.7"
    - env: FITS="astropy" INSTALL_TYPE=install TEST=package MATPLOTLIBVER=1.4 NUMPYVER=1.9
      python: "2.7"
    - env: FITS="astropy" INSTALL_TYPE=install TEST=package MATPLOTLIBVER=1.5 NUMPYVER=1.10
      python: "2.7"

env:  FITS="astropy" INSTALL_TYPE=install TEST=smoke MATPLOTLIBVER=1.5

before_install:
  - export SHERPA_CHANNEL=https://conda.anaconda.org/sherpa
  - export MINICONDA=/home/travis/miniconda
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $MINICONDA
  - export PATH=$MINICONDA/bin:$PATH
  - conda update --yes conda
  - if [ -n "${FITS}" ]; then conda install --yes -c ${SHERPA_CHANNEL} ${FITS}; fi
  - if [ -n "${MATPLOTLIBVER}" ]; then MATPLOTLIB="matplotlib=${MATPLOTLIBVER}"; fi
  - if [ -n "${NUMPYVER}" ]; then NUMPY="numpy=${NUMPYVER}"; fi
  - echo ${MATPLOTLIB} ${NUMPY} ${FITS}
  - conda install --yes python=$TRAVIS_PYTHON_VERSION pip ${MATPLOTLIB} ${NUMPY}
  - conda config --add channels ${SHERPA_CHANNEL}
  - pip install -r test_requirements.txt
  - if [ ${TEST} == package ];
     then pip install ./sherpa-test-data;
     git submodule deinit -f .;
    fi
  - if [ -n "${XSPECVER}" ];
     then DS9_SITE=http://ds9.si.edu/download/linux64/;
     XPA_SITE=http://ds9.si.edu/download/linux64_5/;
     DS9_TAR=ds9.linux64.7.3.2.tar.gz;
     XPA_TAR=xpa.linux64_5.2.1.14.tar.gz;
     wget $DS9_SITE$DS9_TAR;
     wget $XPA_SITE$XPA_TAR;
     THIS_DIR=`pwd`;
     cd $MINICONDA/bin; tar xf $THIS_DIR/$DS9_TAR; tar xf $THIS_DIR/$XPA_TAR; cd -;
     export DISPLAY=:99;
     /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16;
    fi
  - if [ -n "${XSPECVER}" ];
     then sudo apt-get install -qq libwcs4 wcslib-dev libx11-dev libsm-dev libxrender-dev;
     conda install --yes -c https://conda.anaconda.org/cxc/channel/dev xspec-modelsonly=${XSPECVER};
     export HEADAS=$MINICONDA/Xspec/spectral;
     export LD_LIBRARY_PATH=$MINICONDA/Xspec/x86_64-unknown-linux-gnu-libc2.15-0/lib/;
     sed -i.orig s/#with-xspec=True/with-xspec=True/g setup.cfg;
     sed -i.orig "s|#xspec_lib_dirs = None|xspec_lib_dirs=$LD_LIBRARY_PATH|g" setup.cfg;
    fi
  - if [ ${TEST} == smoke ];
     then git submodule deinit -f .;
    fi
  - if [ -n "${NOSETUPTOOLS}" ]; then conda remove --yes setuptools; fi
  - conda install 'numpy < 1.10.4'  # TEMPORARY work around #177


install:
  - python setup.py $INSTALL_TYPE

script:
  - if [ ${TEST} == submodule ]; then python setup.py test; fi
  - if [ ${TEST} == smoke ];
        then cd /home;
        python -c "import sherpa; sherpa.test()";
    fi
  - if [ ${TEST} == package ];
        then cd $HOME;
        sherpa_test;
    fi

notifications:
  email:
    - olaurino@cfa.harvard.edu

